{"version":3,"sources":["../../src/class/ChatServer.js"],"names":["ChatServer","DEV_PORT","app","port","server","io","rooms","createApp","config","createServer","sockets","listen","process","env","PORT","console","log","on","socket","callback","roomId","uniqid","time","Array","isArray","push","id","join","emit","peerId","message","from","mousePosition","newMousePosition","to","signal","data","indexOfMe","indexOf","splice"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport express from 'express';\nimport { createServer } from 'http';\nimport socketIo from 'socket.io';\nimport uniqid from 'uniqid';\n\nexport default class ChatServer {\n  constructor() {\n    this.DEV_PORT = 5000;\n    this.app;\n    this.port;\n    this.server;\n    this.io;\n    this.rooms = {};\n\n    this.createApp();\n    this.config();\n    this.createServer();\n    this.sockets();\n    this.listen();\n  }\n\n  createApp() {\n    this.app = express();\n  }\n\n  config() {\n    this.port = process.env.PORT || this.DEV_PORT;\n  }\n\n  createServer() {\n    this.server = createServer(this.app);\n  }\n\n  sockets() {\n    this.io = socketIo(this.server);\n  }\n\n  listen() {\n    this.server.listen(this.port, () => {\n      console.log('Running server on port %s', this.port);\n    });\n\n    this.io.on('connection', socket => {\n      socket.on('create-room', callback => {\n        const roomId = uniqid.time();\n        this.rooms[roomId] = [];\n        callback(roomId);\n      });\n\n      socket.on('is-room-exist', ({ roomId }, callback) => {\n        if (callback) {\n          callback(Array.isArray(this.rooms[roomId]));\n        }\n      });\n\n      socket.on('join-room', ({ roomId }, callback) => {\n        if (this.rooms[roomId]) {\n          this.rooms[roomId].push(socket.id);\n        } else {\n          this.rooms[roomId] = [];\n        }\n        socket.join(roomId);\n        socket.in(roomId).emit('new-user-join', { peerId: socket.id });\n        if (callback) {\n          callback(roomId);\n        }\n      });\n\n      socket.on('send-message', ({ roomId, message }) => {\n        this.io.in(roomId).emit('dispatch-message', {\n          message,\n          from: socket.id\n        });\n      });\n\n      socket.on('send-draw-line', ({ roomId, mousePosition, newMousePosition }) => {\n        socket.in(roomId).emit('dispatch-draw-line', {\n          mousePosition,\n          newMousePosition\n        });\n      });\n\n      socket.on('signal', ({ to, signal }) => {\n        const data = {\n          from: socket.id,\n          signal\n        };\n        socket.to(to).emit('signal', data);\n      });\n\n      socket.on('disconnect', ({ roomId }) => {\n        const indexOfMe = this.rooms[roomId] && this.rooms[roomId].indexOf(socket.id);\n        if (indexOfMe > -1) {\n          this.rooms[roomId].splice(indexOfMe, 1);\n        }\n      });\n    });\n  }\n\n  getApp() {\n    return this.app;\n  }\n}\n"],"file":"ChatServer.js"}